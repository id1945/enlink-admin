{   
    "highlightCode":"<code highlight=\"\" class=\"hljs\"><span class=\"hljs-keyword\">import<\/span> { Component } <span class=\"hljs-keyword\">from<\/span> <span class=\"hljs-string\">'@angular\/core'<\/span>\r\n<span class=\"hljs-keyword\">import<\/span> { ThemeConstantService } <span class=\"hljs-keyword\">from<\/span> <span class=\"hljs-string\">'..\/..\/shared\/services\/theme-constant.service'<\/span>;\r\n\r\n<span class=\"hljs-meta\">@Component<\/span>({\r\n    template: <span class=\"hljs-string\">`\r\n        &lt;canvas ngChartjs \r\n            [datasets]=\"stackedAreaChartData\" \r\n            [labels]=\"stackedAreaChartLabels\"\r\n            [options]=\"stackedAreaChartOptions\" \r\n            [colors]=\"stackedAreaChartColors\" \r\n            [legend]=\"stackedAreaChartLegend\"\r\n            [chartType]=\"stackedAreaChartType\"&gt;\r\n        &lt;\/canvas&gt;\r\n    `<\/span>\r\n})\r\n\r\n<span class=\"hljs-keyword\">export<\/span> <span class=\"hljs-keyword\">class<\/span> StackedAreaChartJsExampleComponent {\r\n\r\n    <span class=\"hljs-comment\">\/\/Stacked Area Chart<\/span>\r\n    stackedAreaChartData: <span class=\"hljs-built_in\">Array<\/span>&lt;<span class=\"hljs-built_in\">any<\/span>&gt; = [\r\n        { data: [<span class=\"hljs-number\">28<\/span>, <span class=\"hljs-number\">48<\/span>, <span class=\"hljs-number\">40<\/span>, <span class=\"hljs-number\">55<\/span>, <span class=\"hljs-number\">86<\/span>, <span class=\"hljs-number\">55<\/span>, <span class=\"hljs-number\">90<\/span>]}\r\n    ];\r\n    currentstackedAreaChartLabelsIdx = <span class=\"hljs-number\">2<\/span>;\r\n    stackedAreaChartLabels:<span class=\"hljs-built_in\">Array<\/span>&lt;<span class=\"hljs-built_in\">any<\/span>&gt; = [<span class=\"hljs-string\">\"16th\"<\/span>, <span class=\"hljs-string\">\"17th\"<\/span>, <span class=\"hljs-string\">\"18th\"<\/span>, <span class=\"hljs-string\">\"19th\"<\/span>, <span class=\"hljs-string\">\"20th\"<\/span>, <span class=\"hljs-string\">\"21th\"<\/span>, <span class=\"hljs-string\">\"22th\"<\/span>];\r\n    stackedAreaChartOptions: <span class=\"hljs-built_in\">any<\/span> = {\r\n        responsive: <span class=\"hljs-literal\">true<\/span>,\r\n        hover: {\r\n            mode: <span class=\"hljs-string\">'nearest'<\/span>,\r\n            intersect: <span class=\"hljs-literal\">true<\/span>\r\n        },\r\n        elements: {\r\n            line: {\r\n                tension: <span class=\"hljs-number\">0.5<\/span>\r\n            },\r\n            point: { \r\n                radius: <span class=\"hljs-number\">0<\/span> \r\n            }\r\n        },\r\n        scales: {\r\n            xAxes: [{ \r\n                gridLines: [{\r\n                    display: <span class=\"hljs-literal\">false<\/span>,\r\n                }],\r\n                ticks: {\r\n                    fontColor: <span class=\"hljs-keyword\">this<\/span>.themeColors.grayLight,\r\n                    display: <span class=\"hljs-literal\">true<\/span>,\r\n                    beginAtZero: <span class=\"hljs-literal\">true<\/span>,\r\n                    fontSize: <span class=\"hljs-number\">13<\/span>,\r\n                    padding: <span class=\"hljs-number\">10<\/span>\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                gridLines: {\r\n                    drawBorder: <span class=\"hljs-literal\">false<\/span>,\r\n                    drawTicks: <span class=\"hljs-literal\">false<\/span>,\r\n                    borderDash: [<span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">4<\/span>],\r\n                    zeroLineWidth: <span class=\"hljs-number\">1<\/span>,\r\n                    zeroLineBorderDash: [<span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">4<\/span>],\r\n                    scaleLabel: {\r\n                        display: <span class=\"hljs-literal\">false<\/span>,\r\n                        labelString: <span class=\"hljs-string\">'Value'<\/span>\r\n                    }    \r\n                },\r\n                ticks: {\r\n                    max: <span class=\"hljs-number\">100<\/span>,                            \r\n                    stepSize: <span class=\"hljs-number\">20<\/span>,\r\n                    display: <span class=\"hljs-literal\">true<\/span>,\r\n                    beginAtZero: <span class=\"hljs-literal\">true<\/span>,\r\n                    fontColor: <span class=\"hljs-keyword\">this<\/span>.themeColors.grayLight,\r\n                    fontSize: <span class=\"hljs-number\">13<\/span>,\r\n                    padding: <span class=\"hljs-number\">10<\/span>\r\n                }\r\n            }],\r\n        }\r\n    };\r\n    stackedAreaChartColors: <span class=\"hljs-built_in\">Array<\/span>&lt;<span class=\"hljs-built_in\">any<\/span>&gt; = [\r\n        { \r\n            backgroundColor: <span class=\"hljs-keyword\">this<\/span>.themeColors.blueLight,\r\n            borderColor: <span class=\"hljs-keyword\">this<\/span>.themeColors.blue,\r\n            pointBackgroundColor: <span class=\"hljs-keyword\">this<\/span>.themeColors.blue,\r\n            pointBorderColor: <span class=\"hljs-keyword\">this<\/span>.themeColors.white,\r\n            pointHoverBackgroundColor: <span class=\"hljs-keyword\">this<\/span>.themeColors.blueLight,\r\n            pointHoverBorderColor: <span class=\"hljs-keyword\">this<\/span>.themeColors.blueLight\r\n        }\r\n    ];\r\n    stackedAreaChartLegend = <span class=\"hljs-literal\">true<\/span>;\r\n    stackedAreaChartType = <span class=\"hljs-string\">'line'<\/span>;\r\n}<\/code>",
    "rawCode":"import { Component } from '@angular\/core'\r\nimport { ThemeConstantService } from '..\/..\/shared\/services\/theme-constant.service';\r\n\r\n@Component({\r\n    template: `\r\n        <canvas ngChartjs \r\n            [datasets]=\"stackedAreaChartData\" \r\n            [labels]=\"stackedAreaChartLabels\"\r\n            [options]=\"stackedAreaChartOptions\" \r\n            [colors]=\"stackedAreaChartColors\" \r\n            [legend]=\"stackedAreaChartLegend\"\r\n            [chartType]=\"stackedAreaChartType\">\r\n        <\/canvas>\r\n    `\r\n})\r\n\r\nexport class StackedAreaChartJsExampleComponent {\r\n\r\n    \/\/Stacked Area Chart\r\n    stackedAreaChartData: Array<any> = [\r\n        { data: [28, 48, 40, 55, 86, 55, 90]}\r\n    ];\r\n    currentstackedAreaChartLabelsIdx = 2;\r\n    stackedAreaChartLabels:Array<any> = [\"16th\", \"17th\", \"18th\", \"19th\", \"20th\", \"21th\", \"22th\"];\r\n    stackedAreaChartOptions: any = {\r\n        responsive: true,\r\n        hover: {\r\n            mode: 'nearest',\r\n            intersect: true\r\n        },\r\n        elements: {\r\n            line: {\r\n                tension: 0.5\r\n            },\r\n            point: { \r\n                radius: 0 \r\n            }\r\n        },\r\n        scales: {\r\n            xAxes: [{ \r\n                gridLines: [{\r\n                    display: false,\r\n                }],\r\n                ticks: {\r\n                    fontColor: this.themeColors.grayLight,\r\n                    display: true,\r\n                    beginAtZero: true,\r\n                    fontSize: 13,\r\n                    padding: 10\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                gridLines: {\r\n                    drawBorder: false,\r\n                    drawTicks: false,\r\n                    borderDash: [3, 4],\r\n                    zeroLineWidth: 1,\r\n                    zeroLineBorderDash: [3, 4],\r\n                    scaleLabel: {\r\n                        display: false,\r\n                        labelString: 'Value'\r\n                    }    \r\n                },\r\n                ticks: {\r\n                    max: 100,                            \r\n                    stepSize: 20,\r\n                    display: true,\r\n                    beginAtZero: true,\r\n                    fontColor: this.themeColors.grayLight,\r\n                    fontSize: 13,\r\n                    padding: 10\r\n                }\r\n            }],\r\n        }\r\n    };\r\n    stackedAreaChartColors: Array<any> = [\r\n        { \r\n            backgroundColor: this.themeColors.blueLight,\r\n            borderColor: this.themeColors.blue,\r\n            pointBackgroundColor: this.themeColors.blue,\r\n            pointBorderColor: this.themeColors.white,\r\n            pointHoverBackgroundColor: this.themeColors.blueLight,\r\n            pointHoverBorderColor: this.themeColors.blueLight\r\n        }\r\n    ];\r\n    stackedAreaChartLegend = true;\r\n    stackedAreaChartType = 'line';\r\n}    \r\n\r\n"
}
